<?xml version="1.0"?>
<Program xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Classes />
  <Functions>
    <Function>
      <ReturnType>int</ReturnType>
      <FunctionName>Fibonacci</FunctionName>
      <Parameters>
        <Parameter>
          <Type>int</Type>
          <Id>val</Id>
          <Dimensions />
        </Parameter>
      </Parameters>
      <Implementation>
        <Statements>
          <If>
            <RelationalExpression>
              <LeftVariable>
                <Elements>
                  <DataMember>
                    <Id>val</Id>
                  </DataMember>
                </Elements>
              </LeftVariable>
              <RelationOperator>==</RelationOperator>
              <RightInteger>
                <Value>1</Value>
              </RightInteger>
            </RelationalExpression>
            <TrueBlock>
              <Statements>
                <Return>
                  <Integer>
                    <Value>1</Value>
                  </Integer>
                </Return>
              </Statements>
            </TrueBlock>
            <ElseBlock>
              <Statements />
            </ElseBlock>
          </If>
          <If>
            <RelationalExpression>
              <LeftVariable>
                <Elements>
                  <DataMember>
                    <Id>val</Id>
                  </DataMember>
                </Elements>
              </LeftVariable>
              <RelationOperator>==</RelationOperator>
              <RightInteger>
                <Value>2</Value>
              </RightInteger>
            </RelationalExpression>
            <TrueBlock>
              <Statements>
                <Return>
                  <Integer>
                    <Value>1</Value>
                  </Integer>
                </Return>
              </Statements>
            </TrueBlock>
            <ElseBlock>
              <Statements />
            </ElseBlock>
          </If>
          <Return>
            <AddOp>
              <LeftVariable>
                <Elements>
                  <FunctionCall>
                    <Id>Fibonacci</Id>
                    <Parameters>
                      <Expressions>
                        <AddOp>
                          <LeftVariable>
                            <Elements>
                              <DataMember>
                                <Id>val</Id>
                              </DataMember>
                            </Elements>
                          </LeftVariable>
                          <Operator>-</Operator>
                          <RightInteger>
                            <Value>1</Value>
                          </RightInteger>
                        </AddOp>
                      </Expressions>
                    </Parameters>
                  </FunctionCall>
                </Elements>
              </LeftVariable>
              <Operator>+</Operator>
              <RightVariable>
                <Elements>
                  <FunctionCall>
                    <Id>Fibonacci</Id>
                    <Parameters>
                      <Expressions>
                        <AddOp>
                          <LeftVariable>
                            <Elements>
                              <DataMember>
                                <Id>val</Id>
                              </DataMember>
                            </Elements>
                          </LeftVariable>
                          <Operator>-</Operator>
                          <RightInteger>
                            <Value>2</Value>
                          </RightInteger>
                        </AddOp>
                      </Expressions>
                    </Parameters>
                  </FunctionCall>
                </Elements>
              </RightVariable>
            </AddOp>
          </Return>
        </Statements>
      </Implementation>
    </Function>
    <Function>
      <ReturnType>int</ReturnType>
      <FunctionName>Factorial</FunctionName>
      <Parameters>
        <Parameter>
          <Type>int</Type>
          <Id>val</Id>
          <Dimensions />
        </Parameter>
      </Parameters>
      <Implementation>
        <Statements>
          <If>
            <RelationalExpression>
              <LeftVariable>
                <Elements>
                  <DataMember>
                    <Id>val</Id>
                  </DataMember>
                </Elements>
              </LeftVariable>
              <RelationOperator>==</RelationOperator>
              <RightInteger>
                <Value>0</Value>
              </RightInteger>
            </RelationalExpression>
            <TrueBlock>
              <Statements>
                <Return>
                  <Integer>
                    <Value>1</Value>
                  </Integer>
                </Return>
              </Statements>
            </TrueBlock>
            <ElseBlock>
              <Statements />
            </ElseBlock>
          </If>
          <Return>
            <MultOp>
              <LeftVariable>
                <Elements>
                  <DataMember>
                    <Id>val</Id>
                  </DataMember>
                </Elements>
              </LeftVariable>
              <Operator>*</Operator>
              <RightVariable>
                <Elements>
                  <FunctionCall>
                    <Id>Factorial</Id>
                    <Parameters>
                      <Expressions>
                        <AddOp>
                          <LeftVariable>
                            <Elements>
                              <DataMember>
                                <Id>val</Id>
                              </DataMember>
                            </Elements>
                          </LeftVariable>
                          <Operator>-</Operator>
                          <RightInteger>
                            <Value>1</Value>
                          </RightInteger>
                        </AddOp>
                      </Expressions>
                    </Parameters>
                  </FunctionCall>
                </Elements>
              </RightVariable>
            </MultOp>
          </Return>
        </Statements>
      </Implementation>
    </Function>
  </Functions>
  <MainFunction>
    <Statements>
      <Put>
        <Variable>
          <Elements>
            <FunctionCall>
              <Id>Fibonacci</Id>
              <Parameters>
                <Expressions>
                  <Integer>
                    <Value>20</Value>
                  </Integer>
                </Expressions>
              </Parameters>
            </FunctionCall>
          </Elements>
        </Variable>
      </Put>
      <Put>
        <Variable>
          <Elements>
            <FunctionCall>
              <Id>Factorial</Id>
              <Parameters>
                <Expressions>
                  <Integer>
                    <Value>10</Value>
                  </Integer>
                </Expressions>
              </Parameters>
            </FunctionCall>
          </Elements>
        </Variable>
      </Put>
    </Statements>
  </MainFunction>
</Program>